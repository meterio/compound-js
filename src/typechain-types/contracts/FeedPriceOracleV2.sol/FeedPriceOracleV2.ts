/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {
  FunctionFragment,
  Result,
  EventFragment,
} from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "../../common";

export declare namespace FeedPriceOracleV2 {
  export type FeedDataStruct = {
    source: BigNumberish;
    addr: string;
    tokenDecimals: BigNumberish;
    feedDecimals: BigNumberish;
    name: string;
  };

  export type FeedDataStructOutput = [
    number,
    string,
    number,
    number,
    string
  ] & {
    source: number;
    addr: string;
    tokenDecimals: number;
    feedDecimals: number;
    name: string;
  };
}

export interface FeedPriceOracleV2Interface extends utils.Interface {
  functions: {
    "changeOwner(address)": FunctionFragment;
    "feeds(address)": FunctionFragment;
    "fixedPrices(address)": FunctionFragment;
    "getFeed(address)": FunctionFragment;
    "getFixedPrice(address)": FunctionFragment;
    "getUnderlyingPrice(address)": FunctionFragment;
    "getUnderlyingPrices(address[])": FunctionFragment;
    "owner()": FunctionFragment;
    "removeFeed(address)": FunctionFragment;
    "removeFixedPrice(address)": FunctionFragment;
    "setBandFeed(address,address,uint8,uint8,string)": FunctionFragment;
    "setChainlinkFeed(address,address,uint8)": FunctionFragment;
    "setFixedPrice(address,uint256)": FunctionFragment;
    "setWitnetFeed(address,address,uint8,uint8)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "changeOwner"
      | "feeds"
      | "fixedPrices"
      | "getFeed"
      | "getFixedPrice"
      | "getUnderlyingPrice"
      | "getUnderlyingPrices"
      | "owner"
      | "removeFeed"
      | "removeFixedPrice"
      | "setBandFeed"
      | "setChainlinkFeed"
      | "setFixedPrice"
      | "setWitnetFeed"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "changeOwner", values: [string]): string;
  encodeFunctionData(functionFragment: "feeds", values: [string]): string;
  encodeFunctionData(functionFragment: "fixedPrices", values: [string]): string;
  encodeFunctionData(functionFragment: "getFeed", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getFixedPrice",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnderlyingPrice",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "getUnderlyingPrices",
    values: [string[]]
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "removeFeed", values: [string]): string;
  encodeFunctionData(
    functionFragment: "removeFixedPrice",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setBandFeed",
    values: [string, string, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "setChainlinkFeed",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setFixedPrice",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setWitnetFeed",
    values: [string, string, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "changeOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "feeds", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "fixedPrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getFeed", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getFixedPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnderlyingPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUnderlyingPrices",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "removeFeed", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeFixedPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setBandFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setChainlinkFeed",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setFixedPrice",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setWitnetFeed",
    data: BytesLike
  ): Result;

  events: {
    "SetFeed(address,uint8,address,uint8,uint8,string)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "SetFeed"): EventFragment;
}

export interface SetFeedEventObject {
  cToken_: string;
  source: number;
  addr: string;
  tokenDecimals: number;
  feedDecimals: number;
  name: string;
}
export type SetFeedEvent = TypedEvent<
  [string, number, string, number, number, string],
  SetFeedEventObject
>;

export type SetFeedEventFilter = TypedEventFilter<SetFeedEvent>;

export interface FeedPriceOracleV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: FeedPriceOracleV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    changeOwner(
      owner_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    feeds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [number, string, number, number, string] & {
        source: number;
        addr: string;
        tokenDecimals: number;
        feedDecimals: number;
        name: string;
      }
    >;

    fixedPrices(arg0: string, overrides?: CallOverrides): Promise<[BigNumber]>;

    getFeed(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<[FeedPriceOracleV2.FeedDataStructOutput]>;

    getFixedPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUnderlyingPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    getUnderlyingPrices(
      cTokens: string[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]]>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    removeFeed(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    removeFixedPrice(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setBandFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setChainlinkFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setFixedPrice(
      cToken_: string,
      price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setWitnetFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  changeOwner(
    owner_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  feeds(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [number, string, number, number, string] & {
      source: number;
      addr: string;
      tokenDecimals: number;
      feedDecimals: number;
      name: string;
    }
  >;

  fixedPrices(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

  getFeed(
    cToken_: string,
    overrides?: CallOverrides
  ): Promise<FeedPriceOracleV2.FeedDataStructOutput>;

  getFixedPrice(cToken_: string, overrides?: CallOverrides): Promise<BigNumber>;

  getUnderlyingPrice(
    cToken_: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getUnderlyingPrices(
    cTokens: string[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  owner(overrides?: CallOverrides): Promise<string>;

  removeFeed(
    cToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  removeFixedPrice(
    cToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setBandFeed(
    cToken_: string,
    feed_: string,
    tokenDecimals_: BigNumberish,
    feedDecimals_: BigNumberish,
    name: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setChainlinkFeed(
    cToken_: string,
    feed_: string,
    tokenDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setFixedPrice(
    cToken_: string,
    price: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setWitnetFeed(
    cToken_: string,
    feed_: string,
    tokenDecimals_: BigNumberish,
    feedDecimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    changeOwner(owner_: string, overrides?: CallOverrides): Promise<void>;

    feeds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [number, string, number, number, string] & {
        source: number;
        addr: string;
        tokenDecimals: number;
        feedDecimals: number;
        name: string;
      }
    >;

    fixedPrices(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    getFeed(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<FeedPriceOracleV2.FeedDataStructOutput>;

    getFixedPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUnderlyingPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUnderlyingPrices(
      cTokens: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    owner(overrides?: CallOverrides): Promise<string>;

    removeFeed(cToken_: string, overrides?: CallOverrides): Promise<void>;

    removeFixedPrice(cToken_: string, overrides?: CallOverrides): Promise<void>;

    setBandFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      name: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setChainlinkFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setFixedPrice(
      cToken_: string,
      price: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setWitnetFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "SetFeed(address,uint8,address,uint8,uint8,string)"(
      cToken_?: string | null,
      source?: null,
      addr?: null,
      tokenDecimals?: null,
      feedDecimals?: null,
      name?: null
    ): SetFeedEventFilter;
    SetFeed(
      cToken_?: string | null,
      source?: null,
      addr?: null,
      tokenDecimals?: null,
      feedDecimals?: null,
      name?: null
    ): SetFeedEventFilter;
  };

  estimateGas: {
    changeOwner(
      owner_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    feeds(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    fixedPrices(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    getFeed(cToken_: string, overrides?: CallOverrides): Promise<BigNumber>;

    getFixedPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUnderlyingPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUnderlyingPrices(
      cTokens: string[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    removeFeed(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    removeFixedPrice(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setBandFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setChainlinkFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setFixedPrice(
      cToken_: string,
      price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setWitnetFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    changeOwner(
      owner_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    feeds(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fixedPrices(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFeed(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getFixedPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUnderlyingPrice(
      cToken_: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUnderlyingPrices(
      cTokens: string[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeFeed(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    removeFixedPrice(
      cToken_: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setBandFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      name: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setChainlinkFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setFixedPrice(
      cToken_: string,
      price: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setWitnetFeed(
      cToken_: string,
      feed_: string,
      tokenDecimals_: BigNumberish,
      feedDecimals_: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
